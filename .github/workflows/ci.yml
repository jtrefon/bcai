name: Continuous Integration

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate: [jobmanager, runtime, devnet, keygen, dashboard, p2p]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Rust format check
        run: cargo fmt --manifest-path ${{ matrix.crate }}/Cargo.toml -- --check
      
      - name: Clippy
        run: cargo clippy --manifest-path ${{ matrix.crate }}/Cargo.toml -- -D warnings
      
      - name: Run tests
        run: cargo test --manifest-path ${{ matrix.crate }}/Cargo.toml --verbose

  integration-test:
    runs-on: ubuntu-latest
    needs: lint-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build all crates
        run: |
          cargo build --manifest-path runtime/Cargo.toml
          cargo build --manifest-path p2p/Cargo.toml
          cargo build --manifest-path jobmanager/Cargo.toml
          cargo build --manifest-path devnet/Cargo.toml
          cargo build --manifest-path keygen/Cargo.toml
          cargo build --manifest-path dashboard/Cargo.toml
      
      - name: Run integration tests
        run: |
          # Run runtime tests (includes GPU tests)
          cargo test --manifest-path runtime/Cargo.toml --verbose
          
          # Test that binaries can be built and run basic help (with timeout)
          timeout 30s cargo run --manifest-path jobmanager/Cargo.toml -- --help
          timeout 30s cargo run --manifest-path keygen/Cargo.toml -- --help
          timeout 30s cargo run --manifest-path devnet/Cargo.toml -- --help
          timeout 30s cargo run --manifest-path dashboard/Cargo.toml -- --help
